parcel Lucy;

/** Default behaviors for binary fields.
 * 
 * BlobType is an implementation of FieldType tuned for use with fields
 * containing binary data, which cannot be indexed or searched -- only stored.
 */
class Lucy::Plan::BlobType extends Lucy::Plan::FieldType 
    : dumpable {

    
    /** 
     * @param similarity A Similarity.
     * @param stored boolean indicating whether the field should be stored.
     * @param sortable boolean indicating whether the field should be
     * sortable.
     */
    public inert BlobType* 
    init(BlobType *self, Similarity *similarity = NULL);

    public inert BlobType* 
    init2(BlobType *self, Similarity *similarity = NULL, 
          bool_t stored = true, bool_t sortable = false);

    public inert incremented BlobType* 
    new(Similarity *similarity);

    /** Returns true. 
     */
    public bool_t
    Binary(BlobType *self);

    uint8_t
    Scalar_Type_ID(BlobType *self);

    incremented Hash*
    Dump_For_Schema(BlobType *self);

    public incremented Hash*
    Dump(BlobType *self);

    public incremented BlobType*
    Load(BlobType *self, Obj *dump);

    public bool_t
    Equals(BlobType *self, Obj *other);
}

/* Copyright 2010 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

