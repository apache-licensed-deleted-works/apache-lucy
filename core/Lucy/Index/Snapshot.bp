parcel Lucy;

/** Point-in-time index file list.
 *
 * A Snapshot is list of index files.  Because index files, once written, are
 * never modified, the list of files in a Snapshot defines a point-in-time
 * view of the data in an index.
 *
 * IndexReader objects interpret the data associated with a single Snapshot.
 */

class Lucy::Index::Snapshot extends Lucy::Object::Obj : dumpable {

    Hash        *entries;
    CharBuf     *filename;

    inert int32_t current_file_format;

    public inert incremented Snapshot* 
    new();
    
    /**
     * Constructor.  Takes no arguments.
     */
    public inert Snapshot* 
    init(Snapshot *self);

    /** Return a list of all entries.
     */
    public incremented VArray*
    List(Snapshot *self);

    /** Return the number of entries (including directories).
     */
    public uint32_t
    Num_Entries(Snapshot *self);


    /** Add a filepath to the snapshot. 
     */
    public void
    Add_Entry(Snapshot *self, const CharBuf *entry);

    /** Delete a filepath from the snapshot.
     *
     * @return true if the entry existed and was successfully deleted, false
     * otherwise.
     */
    public bool_t
    Delete_Entry(Snapshot *self, const CharBuf *entry);

    void
    Set_Filename(Snapshot *self, const CharBuf *filename);

    /** The name of the file that the Snapshot serves as a proxy for.
     * Initially NULL; updated by Read_File() and Write_File().
     */
    public nullable CharBuf*
    Get_Filename(Snapshot *self);

    public void 
    Destroy(Snapshot *self);
}

/* Copyright 2009 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

